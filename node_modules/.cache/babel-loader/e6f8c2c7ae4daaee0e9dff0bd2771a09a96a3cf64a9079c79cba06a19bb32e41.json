{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julie\\\\Documents\\\\Personal\\\\ocbc-red-conf\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = ['image1.jpg', 'image2.jpg', 'image3.jpg']; // Update with your actual image file names\nconst intervalDuration = 3000; // Interval duration in milliseconds (e.g., 3000 for 3 seconds)\n\nfunction App() {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  useEffect(() => {\n    // Set up the interval for automatic slideshow\n    const intervalId = setInterval(() => {\n      setCurrentIndex(prevIndex => (prevIndex + 1) % images.length);\n    }, intervalDuration);\n\n    // Clean up the interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []); // Run this effect only once when the component mounts\n\n  const handleNext = () => {\n    setCurrentIndex(prevIndex => (prevIndex + 1) % images.length);\n  };\n  const handlePrev = () => {\n    setCurrentIndex(prevIndex => prevIndex === 0 ? images.length - 1 : prevIndex - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrev,\n        className: \"carousel-button\",\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/images/${images[currentIndex]}`,\n        alt: `carousel-${currentIndex}`,\n        className: \"carousel-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        className: \"carousel-button\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tPjzCc9H5UuFdWNuAHYoD0K4UOk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","images","intervalDuration","App","_s","currentIndex","setCurrentIndex","intervalId","setInterval","prevIndex","length","clearInterval","handleNext","handlePrev","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/julie/Documents/Personal/ocbc-red-conf/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst images = ['image1.jpg', 'image2.jpg', 'image3.jpg']; // Update with your actual image file names\nconst intervalDuration = 3000; // Interval duration in milliseconds (e.g., 3000 for 3 seconds)\n\nfunction App() {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    // Set up the interval for automatic slideshow\n    const intervalId = setInterval(() => {\n      setCurrentIndex((prevIndex) => (prevIndex + 1) % images.length);\n    }, intervalDuration);\n\n    // Clean up the interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []); // Run this effect only once when the component mounts\n\n  const handleNext = () => {\n    setCurrentIndex((prevIndex) => (prevIndex + 1) % images.length);\n  };\n\n  const handlePrev = () => {\n    setCurrentIndex((prevIndex) =>\n      prevIndex === 0 ? images.length - 1 : prevIndex - 1\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"carousel-container\">\n        <button onClick={handlePrev} className=\"carousel-button\">\n          Prev\n        </button>\n        <img\n          src={`/images/${images[currentIndex]}`}\n          alt={`carousel-${currentIndex}`}\n          className=\"carousel-image\"\n        />\n        <button onClick={handleNext} className=\"carousel-button\">\n          Next\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,MAAM,GAAG,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC,CAAC;AAC3D,MAAMC,gBAAgB,GAAG,IAAI,CAAC,CAAC;;AAE/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCF,eAAe,CAAEG,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIR,MAAM,CAACS,MAAM,CAAC;IACjE,CAAC,EAAER,gBAAgB,CAAC;;IAEpB;IACA,OAAO,MAAMS,aAAa,CAACJ,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACvBN,eAAe,CAAEG,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIR,MAAM,CAACS,MAAM,CAAC;EACjE,CAAC;EAED,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACvBP,eAAe,CAAEG,SAAS,IACxBA,SAAS,KAAK,CAAC,GAAGR,MAAM,CAACS,MAAM,GAAG,CAAC,GAAGD,SAAS,GAAG,CACpD,CAAC;EACH,CAAC;EAED,oBACET,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBf,OAAA;MAAKc,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjCf,OAAA;QAAQgB,OAAO,EAAEH,UAAW;QAACC,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAEzD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTpB,OAAA;QACEqB,GAAG,EAAG,WAAUpB,MAAM,CAACI,YAAY,CAAE,EAAE;QACvCiB,GAAG,EAAG,YAAWjB,YAAa,EAAE;QAChCS,SAAS,EAAC;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACFpB,OAAA;QAAQgB,OAAO,EAAEJ,UAAW;QAACE,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAEzD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CAxCQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}